
tab:
	(node, next)

free = tab.size
tab.nextFree $$ index
	tab[index].next | index - 1
tab.prevFree $$ index
	tab[index].node.value | index + 1
tab.insert $$ node
	? tab[free] != nil
		tab.rehash()
	index = node.key % tab.size
	? index == free
		tab[index].node = node
		free = tab.nextFree(free)
		tab[index].next = nil
	::? tab[index].node == nil ## 插入空槽, 且其索引不为free
		prevFree = tab.prevFree(index)
		nextFree = tab.nextFree(index)
		tab[index].node = node
		nextFree.node.value = prevFree
		prevFree.next = nextFree
	::
		tab[index].next = free
		tab[free].node = tab[index].node
		tab[index].node = node
		free = tab.nextFree(free)
		tab[free].next = nil
tab.has $$ key
	index = key % tab.size
	% i = index; tab[i].node.key; i = tab[i].next
		? tab[i].node.key == key
			// tab[i].node
tab.get $$ key
	node = tab.has(key)
	// node.value


