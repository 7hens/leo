
EBP(Extended base pointer) 扩展基址寄存器, 用于存放一个指针, 该指针指向系统栈最上面一个栈帧的底部
ESP(Extended stack pointer) 扩展栈指针, 用于指向栈的顶部(下一个压入栈的活动记录的顶部)

计算机内部寄存器阵列:
	数据寄存器
	指针即变址寄存器
	段寄存器
	控制寄存器

Register -- 寄存器

寄存器是中央处理器(CPU)的组成部分.
寄存器是有限存贮容量的高速存贮部件.
寄存器可以用来暂存指令, 数据和地址.

CPU的控制部件: 			包含指令寄存器(IR)和程序计数器(PC)
CPU的算术和逻辑部件:	包含累加器(ACC)

寄存器是集成电路中非常重要的一种存储单元, 通常由触发器组成.
寄存器可分为: 电路内部使用的寄存器, 和充当外部接口的寄存器.
	内部寄存器: 不能被外部电路或软件访问, 只为内部电路实现存储功能或满足电路的时序要求.
	接口寄存器: 可同时被内部电路和外部电路或软件访问, CPU中的寄存器就是其中一种.

寄存器拥有非常高的读写是速度, 所以在寄存器之间的数据传送非常快.
寄存器是CPU内部的元件, 包括通用寄存器, 专用寄存器, 和控制寄存器.

8086寄存器
8086有14个16位寄存器, 按用途可分为1)通用寄存器, 2)指令寄存器, 3)标志寄存器, 4)段寄存器
通用寄存器:
	有8个, 可分为2组, 1)数据寄存器, 2)变址寄存器
	数据寄存器:
		共4个16位的寄存器, 可分为2组8位寄存器分别寻址, 并单独使用
			高8位: AH, BH, CH, DH
			低8位: AL, BL, CL, DL
		AX (accumulator) = AH&AL, 累加器
			用于运算, 在乘除等指令中, 指定用来存放操作数
			所有的IO指令都使用它来与外界设备传输数据
		BX (base) = BH&BL, 基址寄存器, 用于地址索引
		CX (count) = CH&CL, 计数寄存器
			常用于计数, 保存计算值, 如在移位指令, 循环(loop)和串处理指令中用作隐含的计数器
		DX (dat) = DH&DL, 数据寄存器, 用于数据传递
	指针和变址寄存器:
		共4个16位的寄存器, 只能按16位进行存取操作.
		主要用来形成操作数的地址, 用于堆栈操作和变址运算中计算操作数的有效地址.
		SP (Stack Pointer): 堆栈指针寄存器, 配合SS可指向目前的堆栈位置
		BP (Base Pointer): 基址寄存器, 可用作SS的一个相对基址位置
		SI (Source Index): 源变址寄存器, 可用来存放相对于DS段的源变址指针
		DI (Sestination Index): 目的变址寄存器, 可用来存放相对于ES段的目的变址指针
	指令指针IP:
		IP是一个16位的专用寄存器, 它指向当前需要取出的指令字节.
		当BIU从内存中取出N个指令字节后, IP就会自动加N, 指向下一个指令字节.
		IP指向的是指令地址的段内地址偏移量, 又称偏移地址(Offset Address)或有效地址(Effective Address)
	标志寄存器FR:
		FR (Flags Register): 是一个16位的寄存器, 其中有9位是有意义的: 6个状态位, 3个控制位.
		FR主要用于反映处理器的状态和运算结果的某些特征, 以及控制指令的执行.
		FP又称程序状态字(PSW, Program Status Word).
			OF: 溢出标志位, 用于反映有符号数加减运算的结果是否溢出.
				如果运算结果超出当前运算位数所能表示的范围, 则称为溢出, OF位为1, 否则为0
			DF: 方向标志位, 用来决定在串操作指令执行时有关指针寄存器发生调整的方向.
			IF: 中断允许标志位, 用来决定CPU是否响应CPU外部的可屏蔽中断请求.
				CPU必须响应的中断请求: CPU外部的不可屏蔽中断请求, CPU内部产生的中断请求
				IF == 1: CPU要响应CPU外部的可屏蔽中断请求
				IF == 0: CPU不响应CPU外部的可屏蔽中断请求
			TF: 跟踪标志位, 用于调试程序, 该标志位没有专门的指令来设置或清除.
				TF == 1: CPU处于单步执行指令的工作模式
					此时每执行一条指令, 就会显示CPU内各个寄存器的当前值, 以及将要执行的下一条指令
				IF == 0: CPU处于连续执行指令的工作模式
